apiVersion: v1
kind: Pod
metadata:
  annotations:
    autoscaling.knative.dev/min-scale: "1"
    serving.knative.dev/creator: system:admin
  creationTimestamp: "2024-01-31T07:17:40Z"
  generateName: etcd-grpc-00002-deployment-5c9cffbf7d-
  labels:
    app: etcd-grpc-00002
    pod-template-hash: 5c9cffbf7d
    serving.knative.dev/configuration: etcd-grpc
    serving.knative.dev/configurationGeneration: "2"
    serving.knative.dev/configurationUID: 0289d60c-b0fd-43fb-bf5d-b2df2dd2a78a
    serving.knative.dev/revision: etcd-grpc-00002
    serving.knative.dev/revisionUID: 1832559c-32a8-43c9-829e-74def3bed9bd
    serving.knative.dev/service: etcd-grpc
    serving.knative.dev/serviceUID: 11c8a704-07d2-4c37-b74d-7748e3e12d98
  name: etcd-grpc-00002-deployment-5c9cffbf7d-7lswd
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: etcd-grpc-00002-deployment-5c9cffbf7d
      uid: 042b991d-b95a-460d-8150-abdf1d7aa310
  resourceVersion: "2567318"
  uid: 877cde1e-9f66-47a5-85a1-68d4ba446e37
spec:
  containers:
    - command:
        - /usr/local/bin/etcd
        - --data-dir
        - /var/lib/etcd
        - --listen-client-urls
        - http://0.0.0.0:2379
        - --advertise-client-urls
        - http://127.0.0.1:2379
        - --log-level
        - debug
      env:
        - name: PORT
          value: "2379"
        - name: K_REVISION
          value: etcd-grpc-00002
        - name: K_CONFIGURATION
          value: etcd-grpc
        - name: K_SERVICE
          value: etcd-grpc
      image: registry.k8s.io/etcd@sha256:64b9ea357325d5db9f8a723dcf503b5a449177b17ac87d69481e126bb724c263
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          httpGet:
            path: /wait-for-drain
            port: 8022
            scheme: HTTP
      livenessProbe:
        failureThreshold: 3
        grpc:
          port: 2379
          service: ""
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: etcd
      ports:
        - containerPort: 2379
          name: user-port
          protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-qnx4v
          readOnly: true
    - env:
        - name: SERVING_NAMESPACE
          value: default
        - name: SERVING_SERVICE
          value: etcd-grpc
        - name: SERVING_CONFIGURATION
          value: etcd-grpc
        - name: SERVING_REVISION
          value: etcd-grpc-00002
        - name: QUEUE_SERVING_PORT
          value: "8012"
        - name: QUEUE_SERVING_TLS_PORT
          value: "8112"
        - name: CONTAINER_CONCURRENCY
          value: "0"
        - name: REVISION_TIMEOUT_SECONDS
          value: "300"
        - name: REVISION_RESPONSE_START_TIMEOUT_SECONDS
          value: "0"
        - name: REVISION_IDLE_TIMEOUT_SECONDS
          value: "0"
        - name: SERVING_POD
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SERVING_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVING_LOGGING_CONFIG
        - name: SERVING_LOGGING_LEVEL
          value: debug
        - name: SERVING_REQUEST_LOG_TEMPLATE
          value: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl":
        "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}",
        "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent":
        "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp":
        "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s",
        "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
        - name: SERVING_ENABLE_REQUEST_LOG
          value: "true"
        - name: SERVING_REQUEST_METRICS_BACKEND
          value: prometheus
        - name: SERVING_REQUEST_METRICS_REPORTING_PERIOD_SECONDS
          value: "5"
        - name: TRACING_CONFIG_BACKEND
          value: none
        - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
        - name: TRACING_CONFIG_DEBUG
          value: "false"
        - name: TRACING_CONFIG_SAMPLE_RATE
          value: "0.1"
        - name: USER_PORT
          value: "2379"
        - name: SYSTEM_NAMESPACE
          value: knative-serving
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: SERVING_READINESS_PROBE
          value: '[{"tcpSocket":{"port":2379,"host":"127.0.0.1"},"successThreshold":1}]'
        - name: ENABLE_PROFILING
          value: "false"
        - name: SERVING_ENABLE_PROBE_REQUEST_LOG
          value: "true"
        - name: METRICS_COLLECTOR_ADDRESS
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_HTTP2_AUTO_DETECTION
          value: "false"
        - name: ENABLE_HTTP_FULL_DUPLEX
          value: "false"
        - name: ROOT_CA
        - name: ENABLE_MULTI_CONTAINER_PROBES
          value: "true"
      image: ko.local/queue-39be6f1d08a095bd076a71d288d295b6:6fb5d1e2ba49e572f1a2da5624744cda5d34b86244a52e372302eaf042b1ab52
      imagePullPolicy: IfNotPresent
      name: queue-proxy
      ports:
        - containerPort: 8022
          name: http-queueadm
          protocol: TCP
        - containerPort: 9090
          name: http-autometric
          protocol: TCP
        - containerPort: 9091
          name: http-usermetric
          protocol: TCP
        - containerPort: 8012
          name: queue-port
          protocol: TCP
        - containerPort: 8112
          name: https-port
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: K-Network-Probe
              value: queue
          path: /
          port: 8012
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 25m
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-qnx4v
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  nodeName: colima
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 300
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-qnx4v
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-01-31T07:17:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-01-31T07:17:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-01-31T07:17:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-01-31T07:17:40Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: docker://090380ea77f2024c810760738cc8a36c1d8b9fb7363413c2a5c5ac88a7eabe89
      image: registry.k8s.io/etcd:3.5.1-0
      imageID: docker-pullable://registry.k8s.io/etcd@sha256:64b9ea357325d5db9f8a723dcf503b5a449177b17ac87d69481e126bb724c263
      lastState: {}
      name: etcd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-31T07:17:40Z"
    - containerID: docker://6d6e07509d72e58c75b5096f3dba2d89c10d4f078b1c509b814ce38250dab1bd
      image: ko.local/queue-39be6f1d08a095bd076a71d288d295b6:6fb5d1e2ba49e572f1a2da5624744cda5d34b86244a52e372302eaf042b1ab52
      imageID: docker://sha256:0fd7d63bf324955530b1dcf40413eaa45631d63eb8967c9f2a0426cbed117e94
      lastState: {}
      name: queue-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-01-31T07:17:40Z"
  hostIP: 192.168.5.1
  phase: Running
  podIP: 10.42.0.82
  podIPs:
    - ip: 10.42.0.82
  qosClass: Burstable
  startTime: "2024-01-31T07:17:40Z"
