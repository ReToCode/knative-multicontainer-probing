apiVersion: v1
kind: Pod
metadata:
  annotations:
    autoscaling.knative.dev/min-scale: "1"
    serving.knative.dev/creator: kubernetes-admin
  creationTimestamp: "2024-07-10T07:11:02Z"
  generateName: runtime-00001-deployment-5d6cf5bbc9-
  labels:
    app: runtime-00001
    pod-template-hash: 5d6cf5bbc9
    serving.knative.dev/configuration: runtime
    serving.knative.dev/configurationGeneration: "1"
    serving.knative.dev/configurationUID: 4be3fedb-3ce8-4061-a0ff-a5b0aa698006
    serving.knative.dev/revision: runtime-00001
    serving.knative.dev/revisionUID: dc9b90bd-c87e-4758-b909-1f5a3d88d072
    serving.knative.dev/service: runtime
    serving.knative.dev/serviceUID: 643e3064-5fcb-4269-9ac7-16a5ea6bf253
  name: runtime-00001-deployment-5d6cf5bbc9-brpdg
  namespace: default
  ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: runtime-00001-deployment-5d6cf5bbc9
      uid: 9d3f1897-3767-4bb6-8122-da8ce61e623d
  resourceVersion: "1379158"
  uid: 62f1b4a1-554d-4f41-9584-38def38661ad
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchLabels:
                serving.knative.dev/revision: runtime-00001
            topologyKey: kubernetes.io/hostname
          weight: 100
  containers:
    - env:
        - name: INITIALLY_DOWN
          value: "true"
        - name: PORT
          value: "8080"
        - name: K_REVISION
          value: runtime-00001
        - name: K_CONFIGURATION
          value: runtime
        - name: K_SERVICE
          value: runtime
      image: kind.local/test-server-4e77235dce690edd6b45122a823a55c7:d3e2a91ea5ad56b5f0bfe258fe988691d44cfc0bf89cf730050c7ba7d0e32ecd
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          httpGet:
            path: /wait-for-drain
            port: 8022
            scheme: HTTP
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /live
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: user-container
      ports:
        - containerPort: 8080
          name: user-port
          protocol: TCP
      resources: {}
      startupProbe:
        failureThreshold: 3
        httpGet:
          path: /startup
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-srnds
          readOnly: true
    - env:
        - name: SERVING_NAMESPACE
          value: default
        - name: SERVING_SERVICE
          value: runtime
        - name: SERVING_CONFIGURATION
          value: runtime
        - name: SERVING_REVISION
          value: runtime-00001
        - name: QUEUE_SERVING_PORT
          value: "8012"
        - name: QUEUE_SERVING_TLS_PORT
          value: "8112"
        - name: CONTAINER_CONCURRENCY
          value: "0"
        - name: REVISION_TIMEOUT_SECONDS
          value: "300"
        - name: REVISION_RESPONSE_START_TIMEOUT_SECONDS
          value: "0"
        - name: REVISION_IDLE_TIMEOUT_SECONDS
          value: "0"
        - name: SERVING_POD
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: SERVING_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SERVING_LOGGING_CONFIG
        - name: SERVING_LOGGING_LEVEL
        - name: SERVING_REQUEST_LOG_TEMPLATE
          value: '{"httpRequest": {"requestMethod": "{{.Request.Method}}", "requestUrl":
        "{{js .Request.RequestURI}}", "requestSize": "{{.Request.ContentLength}}",
        "status": {{.Response.Code}}, "responseSize": "{{.Response.Size}}", "userAgent":
        "{{js .Request.UserAgent}}", "remoteIp": "{{js .Request.RemoteAddr}}", "serverIp":
        "{{.Revision.PodIP}}", "referer": "{{js .Request.Referer}}", "latency": "{{.Response.Latency}}s",
        "protocol": "{{.Request.Proto}}"}, "traceId": "{{index .Request.Header "X-B3-Traceid"}}"}'
        - name: SERVING_ENABLE_REQUEST_LOG
          value: "false"
        - name: SERVING_REQUEST_METRICS_BACKEND
          value: prometheus
        - name: SERVING_REQUEST_METRICS_REPORTING_PERIOD_SECONDS
          value: "5"
        - name: TRACING_CONFIG_BACKEND
          value: none
        - name: TRACING_CONFIG_ZIPKIN_ENDPOINT
        - name: TRACING_CONFIG_DEBUG
          value: "false"
        - name: TRACING_CONFIG_SAMPLE_RATE
          value: "0.1"
        - name: USER_PORT
          value: "8080"
        - name: SYSTEM_NAMESPACE
          value: knative-serving
        - name: METRICS_DOMAIN
          value: knative.dev/internal/serving
        - name: SERVING_READINESS_PROBE
          value: '{"tcpSocket":{"port":8080,"host":"127.0.0.1"},"successThreshold":1}'
        - name: ENABLE_PROFILING
          value: "false"
        - name: SERVING_ENABLE_PROBE_REQUEST_LOG
          value: "false"
        - name: METRICS_COLLECTOR_ADDRESS
        - name: HOST_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.hostIP
        - name: ENABLE_HTTP2_AUTO_DETECTION
          value: "false"
        - name: ENABLE_HTTP_FULL_DUPLEX
          value: "false"
        - name: ROOT_CA
        - name: ENABLE_MULTI_CONTAINER_PROBES
          value: "false"
      image: kind.local/queue-39be6f1d08a095bd076a71d288d295b6:dcfb21bb453b42c5a8b36e4b2e2ef64bb27836deb214bd88a2044720ae41ddea
      imagePullPolicy: IfNotPresent
      name: queue-proxy
      ports:
        - containerPort: 8022
          name: http-queueadm
          protocol: TCP
        - containerPort: 9090
          name: http-autometric
          protocol: TCP
        - containerPort: 9091
          name: http-usermetric
          protocol: TCP
        - containerPort: 8012
          name: queue-port
          protocol: TCP
        - containerPort: 8112
          name: https-port
          protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          httpHeaders:
            - name: K-Network-Probe
              value: queue
          path: /
          port: 8012
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 25m
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access-srnds
          readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  nodeName: kind-worker3
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 300
  tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
  volumes:
    - name: kube-api-access-srnds
      projected:
        defaultMode: 420
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
                - key: ca.crt
                  path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
status:
  conditions:
    - lastProbeTime: null
      lastTransitionTime: "2024-07-10T07:11:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2024-07-10T07:18:04Z"
      message: 'containers with unready status: [user-container]'
      reason: ContainersNotReady
      status: "False"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2024-07-10T07:18:04Z"
      message: 'containers with unready status: [user-container]'
      reason: ContainersNotReady
      status: "False"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2024-07-10T07:11:02Z"
      status: "True"
      type: PodScheduled
  containerStatuses:
    - containerID: containerd://aa2cd81f08600fe0ead7ef41c238ea5246a55878d93df9630de00e9492c5465b
      image: kind.local/queue-39be6f1d08a095bd076a71d288d295b6:dcfb21bb453b42c5a8b36e4b2e2ef64bb27836deb214bd88a2044720ae41ddea
      imageID: sha256:a60accec34f5f7dd06ddc665350a83f7be2fd662ae128c50341154afa2407491
      lastState: {}
      name: queue-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2024-07-10T07:11:02Z"
    - containerID: containerd://4fbd92e68f80790e0e929f5c86db710557c521d93243d74495bde6065931c0a2
      image: kind.local/test-server-4e77235dce690edd6b45122a823a55c7:d3e2a91ea5ad56b5f0bfe258fe988691d44cfc0bf89cf730050c7ba7d0e32ecd
      imageID: sha256:df4f066f944ee86365e1a75cca1664077bf1baea9b8434215a7869537890c496
      lastState:
        terminated:
          containerID: containerd://e8981374c198ff8c7a9cad9df3b64291a12c8ca39ecef3f98700795a6ad6e919
          exitCode: 2
          finishedAt: "2024-07-10T07:18:03Z"
          message: |
            Starting server. Listening on port:  8080
            Startup probe called, responding with:  false
            Liveness is now:  true
            Readiness is now:  true
            Startup probe called, responding with:  false
            Startup is now:  true
            Startup probe called, responding with:  false
            Liveness probe called, responding with:  true
            Liveness probe called, responding with:  true
            Liveness is now:  false
            Liveness probe called, responding with:  false
            Liveness probe called, responding with:  false
            Liveness probe called, responding with:  false
          reason: Error
          startedAt: "2024-07-10T07:16:37Z"
      name: user-container
      ready: false
      restartCount: 7
      started: false
      state:
        running:
          startedAt: "2024-07-10T07:18:03Z"
  hostIP: 10.89.0.4
  phase: Running
  podIP: 10.244.2.47
  podIPs:
    - ip: 10.244.2.47
  qosClass: Burstable
  startTime: "2024-07-10T07:11:02Z"
